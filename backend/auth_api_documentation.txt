Authentication API Endpoints Documentation

1. Register User
----------------
Endpoint: POST /api/auth/register
Access: Public

Request Body:
{
  "email": "user@example.com",
  "password": "yourPassword",
  "firstName": "John",
  "lastName": "Doe"
}

Success Response:
- Status: 201 Created
- Body:
{
  "success": true,
  "token": "<JWT_TOKEN>"
}
- Set-Cookie: token=<JWT_TOKEN>; HttpOnly; ...

Error Responses:
- Status: 400 Bad Request (missing fields)
- Status: 500 Internal Server Error (other issues)
- Body:
{
  "success": false,
  "error": "Error message"
}

2. Login User
-------------
Endpoint: POST /api/auth/login
Access: Public

Request Body:
{
  "email": "user@example.com",
  "password": "yourPassword"
}

Success Response:
- Status: 200 OK
- Body:
{
  "success": true,
  "token": "<JWT_TOKEN>"
}
- Set-Cookie: token=<JWT_TOKEN>; HttpOnly; ...

Error Responses:
- Status: 400 Bad Request (missing fields)
- Status: 401 Unauthorized (invalid credentials, account locked)
- Body:
{
  "success": false,
  "error": "Error message"
}

3. Get Current User
-------------------
Endpoint: GET /api/auth/me
Access: Private (requires Bearer token)

Headers:
Authorization: Bearer <JWT_TOKEN>

Success Response:
- Status: 200 OK
- Body:
{
  "success": true,
  "data": {
    "_id": "userId",
    "email": "user@example.com",
    "firstName": "John",
    "lastName": "Doe",
    "role": "customer",
    "isActive": true,
    "lastLogin": "...",
    "loginAttempts": 0,
    "lockUntil": null,
    "location": "...",
    "dob": "...",
    "createdAt": "...",
    "updatedAt": "..."
    // (Sensitive fields like password, ssn, visaCardNumber are not included)
  }
}

Error Responses:
- Status: 401 Unauthorized (missing/invalid token)
- Body:
{
  "success": false,
  "error": "Not authorized to access this route"
}

4. Update User Details
----------------------
Endpoint: PUT /api/auth/updatedetails
Access: Private (requires Bearer token)

Headers:
Authorization: Bearer <JWT_TOKEN>

Request Body (any or all fields):
{
  "firstName": "Jane",
  "lastName": "Smith",
  "email": "newemail@example.com"
}

Success Response:
- Status: 200 OK
- Body:
{
  "success": true,
  "data": {
    "_id": "userId",
    "email": "newemail@example.com",
    "firstName": "Jane",
    "lastName": "Smith",
    // ...other user fields
  }
}

Error Responses:
- Status: 401 Unauthorized (missing/invalid token)
- Status: 400 Bad Request (validation error)
- Body:
{
  "success": false,
  "error": "Error message"
}

5. Update Password
------------------
Endpoint: PUT /api/auth/updatepassword
Access: Private (requires Bearer token)

Headers:
Authorization: Bearer <JWT_TOKEN>

Request Body:
{
  "currentPassword": "oldPassword",
  "newPassword": "newPassword"
}

Success Response:
- Status: 200 OK
- Body:
{
  "success": true,
  "token": "<JWT_TOKEN>"
}
- Set-Cookie: token=<JWT_TOKEN>; HttpOnly; ...

Error Responses:
- Status: 401 Unauthorized (incorrect current password)
- Body:
{
  "success": false,
  "error": "Password is incorrect"
}

6. Logout
---------
Endpoint: GET /api/auth/logout
Access: Private (requires Bearer token)

Headers:
Authorization: Bearer <JWT_TOKEN>

Success Response:
- Status: 200 OK
- Body:
{
  "success": true,
  "data": {}
}
- Set-Cookie: token=none; HttpOnly; Expires=<soon>; ... 